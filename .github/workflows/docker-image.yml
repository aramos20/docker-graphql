name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
       fetch-deep: 0

    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v5.4.0
      with:
        major_pattern: "(MAJOR:)"
        minor_pattern: "(MINOR:)"
        version_format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: version
  
    - name: Docker Login
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN}}
      run: |
        docker login -u $DOCKER_USERNAME -p $DOCKER_TOKEN
        echo "BRAND NEW $NEW_VERSION !!!!"

    - name: Build Docker Image
      env:
        NEW_VERSION: ${{ steps.version.output.version}}
      run: |
        docker build -t aramos20/graphql-docker:$NEW_VERSION .
        docker build -t aramos20/graphql-docker .

    - name: Push Docker Image
      env:
          NEW_VERSION: ${{ steps.version.output.version}}
      run: |
        docker push aramos20/graphql-docker:$NEW_VERSION
        docker push aramos20/graphql-docker
        
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
